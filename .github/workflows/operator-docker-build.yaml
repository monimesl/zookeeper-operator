#
# Copyright 2020 Skulup Ltd, Open Collaborators
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Operator Build Automation
on:
  push:
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2.3.2
        name: Checkout Self Repo

      - name: Setup Go environment
        uses: actions/setup-go@v2.1.2
        with:
          go-version: 1.15

      - name: Test Build
        run: |
          make test

      - name: Build and Commit
        run: |
          make crds
          TAG=''
          if [[ $GITHUB_REF == refs/tags/* ]]; then
             TAG=${GITHUB_REF#refs/tags/}
          fi
          chmod +x deployments/build-manifest.sh
          deployments/build-manifest.sh $TAG

      - name: Commit Generated Manifest
        uses: EndBug/add-and-commit@v5
        with:
          message: "ðŸ¤– - CI generated manifest to deploy the operator directly"
          add: "deployments/operator-manifest.yaml"
          tag: "v0.1.0 --force"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare Variables
        id: prepare
        if: github.ref == 'refs/tags/*'
        run: |
          DOCKER_IMAGE=skulup/zookeeper-operator
          VERSION=${GITHUB_REF#refs/tags/}
          TAGS="${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:latest"
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Build Helm Chart
        if: github.ref == 'refs/tags/*'
        run: |
          TAG=${{ steps.prepare.outputs.version }} && VERSION="${TAG//v}"
          git clone https://.:${{ secrets.GITHUB_TOKEN }}@github.com/skulup/charts.git output
          sed -i "s|version: 1.0.0|version: $VERSION|; s|appVersion: 1.0.0|appVersion: $VERSION|" deployments/charts/operator/Chart.yaml
          cat deployments/charts/operator/Chart.yaml
          helm package deployments/charts/operator/ -d output
          helm repo index --url https://skulup.github.io/charts/ output --merge output/index.yaml

      - name: Index Helm Chart
        if: github.ref == 'refs/tags/*'
        uses: cpina/github-action-push-to-another-repository@master
        with:
          source-directory: 'output'
          destination-github-username: 'skulup'
          destination-repository-name: 'charts'
          user-email: shawalpha5@gmail.com
        env:
          API_TOKEN_GITHUB: ${{ secrets.ACCESS_TOKEN_GITHUB }}

      - name: Set up QEMU
        if: github.ref == 'refs/tags/*'
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        if: github.ref == 'refs/tags/*'
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        if: github.ref == 'refs/tags/*'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and Deploy
        if: github.ref == 'refs/tags/*'
        uses: docker/build-push-action@v2
        with:
          push: true
          file: deployments/docker/operator/Dockerfile
          tags: ${{ steps.prepare.outputs.tags }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.version=${{ steps.prepare.outputs.version }}
            org.opencontainers.image.created=${{ steps.prepare.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}