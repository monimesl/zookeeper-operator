# create the namespace
---
apiVersion: v1
kind: Namespace
metadata:
   name: zookeeper-operator
---
# Source: crds/zookeeper.monime.sl_zookeeperclusters.yaml

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: zookeeperclusters.zookeeper.monime.sl
spec:
  group: zookeeper.monime.sl
  names:
    kind: ZookeeperCluster
    listKind: ZookeeperClusterList
    plural: zookeeperclusters
    singular: zookeepercluster
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ZookeeperCluster is the Schema for the zookeeperclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ZookeeperClusterSpec defines the desired state of ZookeeperCluster
            properties:
              annotations:
                additionalProperties:
                  type: string
                description: Annotations defines the annotations to attach to the
                  zookeeper statefulset and services
                type: object
              clusterDomain:
                description: ClusterDomain defines the cluster domain for the cluster
                  It defaults to cluster.local
                type: string
              directories:
                properties:
                  data:
                    type: string
                  log:
                    type: string
                type: object
              env:
                description: Env defines environment variables for the zookeeper statefulset
                  pods
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: 'Variable references $(VAR_NAME) are expanded using
                        the previous defined environment variables in the container
                        and any service environment variables. If a variable cannot
                        be resolved, the reference in the input string will be unchanged.
                        The $(VAR_NAME) syntax can be escaped with a double $$, ie:
                        $$(VAR_NAME). Escaped references will never be expanded, regardless
                        of whether the variable exists or not. Defaults to "".'
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        fieldRef:
                          description: 'Selects a field of the pod: supports metadata.name,
                            metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP,
                            status.podIP, status.podIPs.'
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                        resourceFieldRef:
                          description: 'Selects a resource of the container: only
                            resources limits and requests (limits.cpu, limits.memory,
                            limits.ephemeral-storage, requests.cpu, requests.memory
                            and requests.ephemeral-storage) are currently supported.'
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  required:
                  - name
                  type: object
                type: array
              labels:
                additionalProperties:
                  type: string
                description: Labels defines the labels to attach to the zookeeper
                  statefulset pods
                type: object
              log4jProps:
                description: Log4jProps defines the log4j.properties data
                type: string
              log4jQuietProps:
                description: Log4jQuietProps defines the log4j-quiet.properties data
                type: string
              metricConfig:
                description: MetricSpec defines some properties use the create the
                  ServiceMonitorSpec objects if prometheus metrics is supported by
                  the platform
                properties:
                  basicAuth:
                    description: 'BasicAuth allow an endpoint to authenticate over
                      basic authentication More info: https://prometheus.io/docs/operating/configuration/#endpoints'
                    properties:
                      password:
                        description: The secret in the service monitor namespace that
                          contains the password for authentication.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                      username:
                        description: The secret in the service monitor namespace that
                          contains the username for authentication.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    type: object
                  bearerTokenFile:
                    description: BearerTokenFile defines the file to read bearer token
                      for scraping targets.
                    type: string
                  bearerTokenSecret:
                    description: BearerTokenSecret defines the secret to mount to
                      read bearer token for scraping targets. The secret needs to
                      be in the same namespace as the service monitor and accessible
                      by the Prometheus Operator.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                  metricRelabelings:
                    description: MetricRelabelConfigs to apply to samples before ingestion.
                    items:
                      description: 'RelabelConfig allows dynamic rewriting of the
                        label set, being applied to samples before ingestion. It defines
                        `<metric_relabel_configs>`-section of Prometheus configuration.
                        More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
                      properties:
                        action:
                          description: Action to perform based on regex matching.
                            Default is 'replace'
                          type: string
                        modulus:
                          description: Modulus to take of the hash of the source label
                            values.
                          format: int64
                          type: integer
                        regex:
                          description: Regular expression against which the extracted
                            value is matched. Default is '(.*)'
                          type: string
                        replacement:
                          description: Replacement value against which a regex replace
                            is performed if the regular expression matches. Regex
                            capture groups are available. Default is '$1'
                          type: string
                        separator:
                          description: Separator placed between concatenated source
                            label values. default is ';'.
                          type: string
                        sourceLabels:
                          description: The source labels select values from existing
                            labels. Their content is concatenated using the configured
                            separator and matched against the configured regular expression
                            for the replace, keep, and drop actions.
                          items:
                            type: string
                          type: array
                        targetLabel:
                          description: Label to which the resulting value is written
                            in a replace action. It is mandatory for replace actions.
                            Regex capture groups are available.
                          type: string
                      type: object
                    type: array
                  relabelings:
                    description: 'RelabelConfigs to apply to samples before scraping.
                      More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config'
                    items:
                      description: 'RelabelConfig allows dynamic rewriting of the
                        label set, being applied to samples before ingestion. It defines
                        `<metric_relabel_configs>`-section of Prometheus configuration.
                        More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
                      properties:
                        action:
                          description: Action to perform based on regex matching.
                            Default is 'replace'
                          type: string
                        modulus:
                          description: Modulus to take of the hash of the source label
                            values.
                          format: int64
                          type: integer
                        regex:
                          description: Regular expression against which the extracted
                            value is matched. Default is '(.*)'
                          type: string
                        replacement:
                          description: Replacement value against which a regex replace
                            is performed if the regular expression matches. Regex
                            capture groups are available. Default is '$1'
                          type: string
                        separator:
                          description: Separator placed between concatenated source
                            label values. default is ';'.
                          type: string
                        sourceLabels:
                          description: The source labels select values from existing
                            labels. Their content is concatenated using the configured
                            separator and matched against the configured regular expression
                            for the replace, keep, and drop actions.
                          items:
                            type: string
                          type: array
                        targetLabel:
                          description: Label to which the resulting value is written
                            in a replace action. It is mandatory for replace actions.
                            Regex capture groups are available.
                          type: string
                      type: object
                    type: array
                  sampleLimit:
                    description: SampleLimit defines per-scrape limit on number of
                      scraped samples that will be accepted.
                    format: int64
                    type: integer
                  scrapeInterval:
                    description: ScrapeInterval defines the interval at which metrics
                      should be scraped
                    type: string
                  scrapeTimeout:
                    description: Timeout after which the scrape is ended
                    type: string
                  tlsConfig:
                    description: TlsConfig defines the TLS configuration to use when
                      scraping the endpoint
                    properties:
                      ca:
                        description: Struct containing the CA cert to use for the
                          targets.
                        properties:
                          configMap:
                            description: ConfigMap containing data to use for the
                              targets.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          secret:
                            description: Secret containing data to use for the targets.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                      caFile:
                        description: Path to the CA cert in the Prometheus container
                          to use for the targets.
                        type: string
                      cert:
                        description: Struct containing the client cert file for the
                          targets.
                        properties:
                          configMap:
                            description: ConfigMap containing data to use for the
                              targets.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          secret:
                            description: Secret containing data to use for the targets.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                      certFile:
                        description: Path to the client cert file in the Prometheus
                          container for the targets.
                        type: string
                      insecureSkipVerify:
                        description: Disable target certificate validation.
                        type: boolean
                      keyFile:
                        description: Path to the client key file in the Prometheus
                          container for the targets.
                        type: string
                      keySecret:
                        description: Secret containing the client key file for the
                          targets.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                      serverName:
                        description: Used to verify the hostname for the targets.
                        type: string
                    type: object
                type: object
              persistence:
                description: Persistence configures your node storage
                properties:
                  claimSpec:
                    description: ClaimSpec describes the common attributes of storage
                      devices and allows a Source for provider-specific attributes
                    properties:
                      accessModes:
                        description: 'AccessModes contains the desired access modes
                          the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                        items:
                          type: string
                        type: array
                      dataSource:
                        description: 'This field can be used to specify either: *
                          An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                          * An existing PVC (PersistentVolumeClaim) * An existing
                          custom resource that implements data population (Alpha)
                          In order to use custom resource types that implement data
                          population, the AnyVolumeDataSource feature gate must be
                          enabled. If the provisioner or an external controller can
                          support the specified data source, it will create a new
                          volume based on the contents of the specified data source.'
                        properties:
                          apiGroup:
                            description: APIGroup is the group for the resource being
                              referenced. If APIGroup is not specified, the specified
                              Kind must be in the core API group. For any other third-party
                              types, APIGroup is required.
                            type: string
                          kind:
                            description: Kind is the type of resource being referenced
                            type: string
                          name:
                            description: Name is the name of resource being referenced
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                      resources:
                        description: 'Resources represents the minimum resources the
                          volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      selector:
                        description: A label query over volumes to consider for binding.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      storageClassName:
                        description: 'Name of the StorageClass required by the claim.
                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                        type: string
                      volumeMode:
                        description: volumeMode defines what type of volume is required
                          by the claim. Value of Filesystem is implied when not included
                          in claim spec.
                        type: string
                      volumeName:
                        description: VolumeName is the binding reference to the PersistentVolume
                          backing this claim.
                        type: string
                    type: object
                  reclaimPolicy:
                    description: ReclaimPolicy decides the fate of the PVCs after
                      the cluster is deleted. If it's set to Delete and the zookeeper
                      cluster is deleted, the corresponding PVCs will be deleted.
                      The default value is Retain.
                    enum:
                    - Delete
                    - Retain
                    type: string
                type: object
              podConfig:
                description: PodConfig defines common configuration for the zookeeper
                  pods
                properties:
                  activeDeadlineSeconds:
                    description: Optional duration in seconds the pod may be active
                      on the node relative to StartTime before the system will actively
                      try to mark it failed and kill associated containers. Value
                      must be a positive integer.
                    format: int64
                    type: integer
                  affinity:
                    description: Affinity defines the pod's scheduling constraints
                    properties:
                      nodeAffinity:
                        description: Describes node affinity scheduling rules for
                          the pod.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node matches the corresponding matchExpressions;
                              the node(s) with the highest sum are the most preferred.
                            items:
                              description: An empty preferred scheduling term matches
                                all objects with implicit weight 0 (i.e. it's a no-op).
                                A null preferred scheduling term matches no objects
                                (i.e. is also a no-op).
                              properties:
                                preference:
                                  description: A node selector term, associated with
                                    the corresponding weight.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                weight:
                                  description: Weight associated with matching the
                                    corresponding nodeSelectorTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - preference
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to an update), the system
                              may or may not try to eventually evict the pod from
                              its node.
                            properties:
                              nodeSelectorTerms:
                                description: Required. A list of node selector terms.
                                  The terms are ORed.
                                items:
                                  description: A null or empty node selector term
                                    matches no objects. The requirements of them are
                                    ANDed. The TopologySelectorTerm type implements
                                    a subset of the NodeSelectorTerm.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            required:
                            - nodeSelectorTerms
                            type: object
                        type: object
                      podAffinity:
                        description: Describes pod affinity scheduling rules (e.g.
                          co-locate this pod in the same node, zone, etc. as some
                          other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node has pods which matches the corresponding
                              podAffinityTerm; the node(s) with the highest sum are
                              the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated
                                    with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaceSelector:
                                      description: A label query over the set of namespaces
                                        that the term applies to. The term is applied
                                        to the union of the namespaces selected by
                                        this field and the ones listed in the namespaces
                                        field. null selector and null or empty namespaces
                                        list means "this pod's namespace". An empty
                                        selector ({}) matches all namespaces. This
                                        field is alpha-level and is only honored when
                                        PodAffinityNamespaceSelector feature is enabled.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaces:
                                      description: namespaces specifies a static list
                                        of namespace names that the term applies to.
                                        The term is applied to the union of the namespaces
                                        listed in this field and the ones selected
                                        by namespaceSelector. null or empty namespaces
                                        list and null namespaceSelector means "this
                                        pod's namespace"
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the
                                        pods matching the labelSelector in the specified
                                        namespaces, where co-located is defined as
                                        running on a node whose value of the label
                                        with key topologyKey matches that of any node
                                        on which any of the selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: weight associated with matching the
                                    corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to a pod label update),
                              the system may or may not try to eventually evict the
                              pod from its node. When there are multiple elements,
                              the lists of nodes corresponding to each podAffinityTerm
                              are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s))
                                that this pod should be co-located (affinity) or not
                                co-located (anti-affinity) with, where co-located
                                is defined as running on a node whose value of the
                                label with key <topologyKey> matches that of any node
                                on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaceSelector:
                                  description: A label query over the set of namespaces
                                    that the term applies to. The term is applied
                                    to the union of the namespaces selected by this
                                    field and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list
                                    means "this pod's namespace". An empty selector
                                    ({}) matches all namespaces. This field is alpha-level
                                    and is only honored when PodAffinityNamespaceSelector
                                    feature is enabled.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaces:
                                  description: namespaces specifies a static list
                                    of namespace names that the term applies to. The
                                    term is applied to the union of the namespaces
                                    listed in this field and the ones selected by
                                    namespaceSelector. null or empty namespaces list
                                    and null namespaceSelector means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                      podAntiAffinity:
                        description: Describes pod anti-affinity scheduling rules
                          (e.g. avoid putting this pod in the same node, zone, etc.
                          as some other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the anti-affinity expressions
                              specified by this field, but it may choose a node that
                              violates one or more of the expressions. The node that
                              is most preferred is the one with the greatest sum of
                              weights, i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              anti-affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node has pods which matches the corresponding
                              podAffinityTerm; the node(s) with the highest sum are
                              the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated
                                    with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaceSelector:
                                      description: A label query over the set of namespaces
                                        that the term applies to. The term is applied
                                        to the union of the namespaces selected by
                                        this field and the ones listed in the namespaces
                                        field. null selector and null or empty namespaces
                                        list means "this pod's namespace". An empty
                                        selector ({}) matches all namespaces. This
                                        field is alpha-level and is only honored when
                                        PodAffinityNamespaceSelector feature is enabled.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaces:
                                      description: namespaces specifies a static list
                                        of namespace names that the term applies to.
                                        The term is applied to the union of the namespaces
                                        listed in this field and the ones selected
                                        by namespaceSelector. null or empty namespaces
                                        list and null namespaceSelector means "this
                                        pod's namespace"
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the
                                        pods matching the labelSelector in the specified
                                        namespaces, where co-located is defined as
                                        running on a node whose value of the label
                                        with key topologyKey matches that of any node
                                        on which any of the selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: weight associated with matching the
                                    corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the anti-affinity requirements specified
                              by this field are not met at scheduling time, the pod
                              will not be scheduled onto the node. If the anti-affinity
                              requirements specified by this field cease to be met
                              at some point during pod execution (e.g. due to a pod
                              label update), the system may or may not try to eventually
                              evict the pod from its node. When there are multiple
                              elements, the lists of nodes corresponding to each podAffinityTerm
                              are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s))
                                that this pod should be co-located (affinity) or not
                                co-located (anti-affinity) with, where co-located
                                is defined as running on a node whose value of the
                                label with key <topologyKey> matches that of any node
                                on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaceSelector:
                                  description: A label query over the set of namespaces
                                    that the term applies to. The term is applied
                                    to the union of the namespaces selected by this
                                    field and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list
                                    means "this pod's namespace". An empty selector
                                    ({}) matches all namespaces. This field is alpha-level
                                    and is only honored when PodAffinityNamespaceSelector
                                    feature is enabled.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaces:
                                  description: namespaces specifies a static list
                                    of namespace names that the term applies to. The
                                    term is applied to the union of the namespaces
                                    listed in this field and the ones selected by
                                    namespaceSelector. null or empty namespaces list
                                    and null namespaceSelector means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                    type: object
                  annotations:
                    additionalProperties:
                      type: string
                    description: Annotations defines the annotations to attach to
                      the pod
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels defines the labels to attach to the broker
                      pod
                    type: object
                  nodeSelector:
                    additionalProperties:
                      type: string
                    type: object
                  restartPolicy:
                    description: Restart policy for all containers within the pod.
                      One of Always, OnFailure, Never. Default to Always.
                    type: string
                  securityContext:
                    description: PodSecurityContext holds pod-level security attributes
                      and common container settings. Some fields are also present
                      in container.securityContext.  Field values of container.securityContext
                      take precedence over field values of PodSecurityContext.
                    properties:
                      fsGroup:
                        description: "A special supplemental group that applies to
                          all containers in a pod. Some volume types allow the Kubelet
                          to change the ownership of that volume to be owned by the
                          pod: 
 1. The owning GID will be the FSGroup 2. The setgid
                          bit is set (new files created in the volume will be owned
                          by FSGroup) 3. The permission bits are OR'd with rw-rw----
                          
 If unset, the Kubelet will not modify the ownership and
                          permissions of any volume."
                        format: int64
                        type: integer
                      fsGroupChangePolicy:
                        description: 'fsGroupChangePolicy defines behavior of changing
                          ownership and permission of the volume before being exposed
                          inside Pod. This field will only apply to volume types which
                          support fsGroup based ownership(and permissions). It will
                          have no effect on ephemeral volume types such as: secret,
                          configmaps and emptydir. Valid values are "OnRootMismatch"
                          and "Always". If not specified, "Always" is used.'
                        type: string
                      runAsGroup:
                        description: The GID to run the entrypoint of the container
                          process. Uses runtime default if unset. May also be set
                          in SecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext
                          takes precedence for that container.
                        format: int64
                        type: integer
                      runAsNonRoot:
                        description: Indicates that the container must run as a non-root
                          user. If true, the Kubelet will validate the image at runtime
                          to ensure that it does not run as UID 0 (root) and fail
                          to start the container if it does. If unset or false, no
                          such validation will be performed. May also be set in SecurityContext.  If
                          set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence.
                        type: boolean
                      runAsUser:
                        description: The UID to run the entrypoint of the container
                          process. Defaults to user specified in image metadata if
                          unspecified. May also be set in SecurityContext.  If set
                          in both SecurityContext and PodSecurityContext, the value
                          specified in SecurityContext takes precedence for that container.
                        format: int64
                        type: integer
                      seLinuxOptions:
                        description: The SELinux context to be applied to all containers.
                          If unspecified, the container runtime will allocate a random
                          SELinux context for each container.  May also be set in
                          SecurityContext.  If set in both SecurityContext and PodSecurityContext,
                          the value specified in SecurityContext takes precedence
                          for that container.
                        properties:
                          level:
                            description: Level is SELinux level label that applies
                              to the container.
                            type: string
                          role:
                            description: Role is a SELinux role label that applies
                              to the container.
                            type: string
                          type:
                            description: Type is a SELinux type label that applies
                              to the container.
                            type: string
                          user:
                            description: User is a SELinux user label that applies
                              to the container.
                            type: string
                        type: object
                      seccompProfile:
                        description: The seccomp options to use by the containers
                          in this pod.
                        properties:
                          localhostProfile:
                            description: localhostProfile indicates a profile defined
                              in a file on the node should be used. The profile must
                              be preconfigured on the node to work. Must be a descending
                              path, relative to the kubelet's configured seccomp profile
                              location. Must only be set if type is "Localhost".
                            type: string
                          type:
                            description: "type indicates which kind of seccomp profile
                              will be applied. Valid options are: 
 Localhost - a
                              profile defined in a file on the node should be used.
                              RuntimeDefault - the container runtime default profile
                              should be used. Unconfined - no profile should be applied."
                            type: string
                        required:
                        - type
                        type: object
                      supplementalGroups:
                        description: A list of groups applied to the first process
                          run in each container, in addition to the container's primary
                          GID.  If unspecified, no groups will be added to any container.
                        items:
                          format: int64
                          type: integer
                        type: array
                      sysctls:
                        description: Sysctls hold a list of namespaced sysctls used
                          for the pod. Pods with unsupported sysctls (by the container
                          runtime) might fail to launch.
                        items:
                          description: Sysctl defines a kernel parameter to be set
                          properties:
                            name:
                              description: Name of a property to set
                              type: string
                            value:
                              description: Value of a property to set
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      windowsOptions:
                        description: The Windows specific settings applied to all
                          containers. If unspecified, the options within a container's
                          SecurityContext will be used. If set in both SecurityContext
                          and PodSecurityContext, the value specified in SecurityContext
                          takes precedence.
                        properties:
                          gmsaCredentialSpec:
                            description: GMSACredentialSpec is where the GMSA admission
                              webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                              inlines the contents of the GMSA credential spec named
                              by the GMSACredentialSpecName field.
                            type: string
                          gmsaCredentialSpecName:
                            description: GMSACredentialSpecName is the name of the
                              GMSA credential spec to use.
                            type: string
                          runAsUserName:
                            description: The UserName in Windows to run the entrypoint
                              of the container process. Defaults to the user specified
                              in image metadata if unspecified. May also be set in
                              PodSecurityContext. If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence.
                            type: string
                        type: object
                    type: object
                  terminationGracePeriodSeconds:
                    description: TerminationGracePeriodSeconds is the duration in
                      seconds after the processes running in the pod are sent a termination
                      signal and the time when the processes are forcibly halted with
                      a kill signal. Set this value longer than the expected cleanup
                      time for your process. Defaults to 30 seconds.
                    format: int64
                    type: integer
                  tolerations:
                    description: Tolerations are attached to tolerates any taint that
                      matches the triple <key,value,effect> using the matching operator
                      <operator>.
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                type: object
              ports:
                properties:
                  admin:
                    format: int32
                    type: integer
                  client:
                    format: int32
                    type: integer
                  leader:
                    format: int32
                    type: integer
                  metrics:
                    format: int32
                    type: integer
                  quorum:
                    format: int32
                    type: integer
                  secureClient:
                    format: int32
                    type: integer
                type: object
              probeConfig:
                description: ProbeConfig defines the probing settings for the zookeeper
                  containers
                properties:
                  liveness:
                    properties:
                      failureThreshold:
                        format: int32
                        minimum: 0
                        type: integer
                      initialDelaySeconds:
                        format: int32
                        minimum: 0
                        type: integer
                      periodSeconds:
                        format: int32
                        minimum: 0
                        type: integer
                      successThreshold:
                        format: int32
                        minimum: 0
                        type: integer
                      timeoutSeconds:
                        format: int32
                        minimum: 0
                        type: integer
                    type: object
                  readiness:
                    properties:
                      failureThreshold:
                        format: int32
                        minimum: 0
                        type: integer
                      initialDelaySeconds:
                        format: int32
                        minimum: 0
                        type: integer
                      periodSeconds:
                        format: int32
                        minimum: 0
                        type: integer
                      successThreshold:
                        format: int32
                        minimum: 0
                        type: integer
                      timeoutSeconds:
                        format: int32
                        minimum: 0
                        type: integer
                    type: object
                  startup:
                    properties:
                      failureThreshold:
                        format: int32
                        minimum: 0
                        type: integer
                      initialDelaySeconds:
                        format: int32
                        minimum: 0
                        type: integer
                      periodSeconds:
                        format: int32
                        minimum: 0
                        type: integer
                      successThreshold:
                        format: int32
                        minimum: 0
                        type: integer
                      timeoutSeconds:
                        format: int32
                        minimum: 0
                        type: integer
                    type: object
                type: object
              size:
                format: int32
                minimum: 0
                type: integer
              zkCfg:
                description: ZkConfig defines the zoo.cfg data
                type: string
              zookeeperVersion:
                description: ZookeeperVersion defines the version of zookeeper to
                  use
                type: string
            type: object
          status:
            description: ZookeeperClusterStatus defines the observed state of ZookeeperCluster
            properties:
              metadata:
                description: INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster
                properties:
                  serviceMonitorVersion:
                    type: string
                  size:
                    format: int32
                    type: integer
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: zookeeper-operator/templates/webhookSecretAndConfigurations.yaml
## We generate one root CA and server certificate which are as
  ## by the webhook caBundle and server secrete. We place the both
  ## secret and webhook config files here so they share the same root CA
  ## See https://github.com/helm/helm/issues/6456#issuecomment-701727623---
kind: Secret
apiVersion: v1
type: kubernetes.io/tls
metadata:
  name: zookeeper-operator-zookeeper-operator-webhook-secret
  namespace: zookeeper-operator
  labels:
    helm.sh/chart: zookeeper-operator-0.1.0
    app.kubernetes.io/name: zookeeper-operator
    app.kubernetes.io/instance: zookeeper-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVKVENDQXcyZ0F3SUJBZ0lSQUs2bWloMWlqVkxNSkhnQUQweTJvc1V3RFFZSktvWklodmNOQVFFTEJRQXcKR1RFWE1CVUdBMVVFQXhNT2QyVmliMjlyTFhKdmIzUXRZMkV3SGhjTk1qRXdOekl4TURnME1UTTRXaGNOTXpFdwpOekU1TURnME1UTTRXakJBTVQ0d1BBWURWUVFERXpWNmIyOXJaV1Z3WlhJdGIzQmxjbUYwYjNJdGVtOXZhMlZsCmNHVnlMVzl3WlhKaGRHOXlMWGRsWW1odmIyc3RjMlZ5ZG1salpUQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFNSExFRllkYndVZStWbWtsRWJnaDhDaW1ZQXJrbWE1aVRlbmFxa1dTYncxM0E5eApiUUgzVmpKb3dpMmN3a01MYmtIa0M1eEcyVE42WlN6TUdzYUdYbjk1RXFVR1JXdll5OUpFUnFZNmpQRk5BYVBIClRubThEcTZSdllvQUlDMitOa2pwem5pRWVmUWtRdXAvWkZwWEM4dG03SHJuTE9IRXl1UmpweXFIRXgvS0d3SXYKem1RY3gvVnpQUTB0WUdLRzlCKy9pRVlINFlNQ0lLL2wwOGx4Y1FKdlNTMGF3TzhLckhDYmYyekFqdkpCWENuYwpEaGN6dG1kYnA5TE1NYzQwMVMwTkZvOW91K3g2WHFYOEt2amtFOHNUODYzQ0pvbFpvVWZBUjhoRldKNk1oVUVvCmpYamhmY25qVlRmOWowUFNKTldJUFFBK0pkcjI0Q2h3cllULzFWa0NBd0VBQWFPQ0FUOHdnZ0U3TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlROMnhrZmdXekxTM2Evdzg0QzVjeUJxWGdKbWpDQjJnWURWUjBSCkJJSFNNSUhQZ2pWNmIyOXJaV1Z3WlhJdGIzQmxjbUYwYjNJdGVtOXZhMlZsY0dWeUxXOXdaWEpoZEc5eUxYZGwKWW1odmIyc3RjMlZ5ZG1salpZSkllbTl2YTJWbGNHVnlMVzl3WlhKaGRHOXlMWHB2YjJ0bFpYQmxjaTF2Y0dWeQpZWFJ2Y2kxM1pXSm9iMjlyTFhObGNuWnBZMlV1ZW05dmEyVmxjR1Z5TFc5d1pYSmhkRzl5Z2t4NmIyOXJaV1Z3ClpYSXRiM0JsY21GMGIzSXRlbTl2YTJWbGNHVnlMVzl3WlhKaGRHOXlMWGRsWW1odmIyc3RjMlZ5ZG1salpTNTYKYjI5clpXVndaWEl0YjNCbGNtRjBiM0l1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQkt1Qzg4RE5jRApFcEh3UWdSazM2Q3BKdlE3ZWZBKzhkN0V6Y09iTkErSGFNOGFaaUUwV0hEVzBVQnFMa25rQkxuVGhUQWZhc3FxCitod1QyakkvWFAzYUlFWGU1OHZ4aGxyeUN1emltWDNtQjArUW1ud0E0aU83V2pmK3pBcmIrTEhGb0VNaHRGZ3kKZlZVSzJJaW1IeCsyOWV2THNocG5oZ3ZPWTgweFJNRnJkK2RpRmdTTlRzTW9DK2RGQlF5TjRDM3JibU9IdHlEMQpTL01EZnJUMmV4Lzh2Y3czc1ovRXNpaEw4SnVoKzlwOHVXTk9LMStlY3ltK0c0SDJ2MXJIaDJBQlVKa0Y0NlpNClM4WVlUb1NIQTNtWXNvbDBPZzU0aGc0UGpZd1lUZS9OeExub2k2NzFRTXovSnhHN3Urakdja3J6eGU3THN4ZDgKMFV1T0p0VlhiYTlkCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd2NzUVZoMXZCUjc1V2FTVVJ1Q0h3S0taZ0N1U1pybUpONmRxcVJaSnZEWGNEM0Z0CkFmZFdNbWpDTFp6Q1F3dHVRZVFMbkViWk0zcGxMTXdheG9aZWYza1NwUVpGYTlqTDBrUkdwanFNOFUwQm84ZE8KZWJ3T3JwRzlpZ0FnTGI0MlNPbk9lSVI1OUNSQzZuOWtXbGNMeTJic2V1Y3M0Y1RLNUdPbktvY1RIOG9iQWkvTwpaQnpIOVhNOURTMWdZb2IwSDcrSVJnZmhnd0lncitYVHlYRnhBbTlKTFJyQTd3cXNjSnQvYk1DTzhrRmNLZHdPCkZ6TzJaMXVuMHN3eHpqVFZMUTBXajJpNzdIcGVwZndxK09RVHl4UHpyY0ltaVZtaFI4Qkh5RVZZbm95RlFTaU4KZU9GOXllTlZOLzJQUTlJazFZZzlBRDRsMnZiZ0tIQ3RoUC9WV1FJREFRQUJBb0lCQUZVa0d2eEttREVleDV4TAp3MTFVWGpBUy8rK2d0UVJ1dFV0L1FVd2lYNmpSM09ub0FtVmZ2ajROYW1wUnVjTnM3VGNEc3RvcEFsb3NodkRrCmgwcjdVOThiV1VhcGQ2eUhKaDB1SS8vNkwxd0FZaDBMZm4zYlVuUDkwZEVrZHY3QjErVzIyeUIxeTRLb3Y4RjQKMEtVa0l5bHRBYTZKakYxd2NWZGdOTnhwVmN5YjRMTUtEVVB1S1BJVGdTV0xhTEU2L2dMa3FhZUo1T0NIaGs2SgpBSDJhdHZQMGNOMm83MEZocm5BemUweTRYaU5ZZWRCTDVyWjFzUHMxYXF2elNybSswOGpnWDBNaFNpTEpvWnl1CnN2bTZQWmdJTFFwUHhQd1A3bHZqbXN4MUIvZUtDVjZ1NC9tYm1ENEtRT3d5R0FIalE3cmpSd1M4cHlBSlM1N3EKVERpVUdaVUNnWUVBeGxhOHN2VmFSVnc0dmp5bUhieTgvMCtUU2Rnd3NMbmp5MllDS1VSZG9NZWNFaU0rSll5Rgp2WVZOSTRGNVFOSi9SbHBxV210YzFJTnJiQ1lseUlYN1l4S0tNRXVhaFpBbFNmUmQxeFpvNkNGUklyTCtwYVZMCitPTlQvcHN5N0Q3OGxBdTZnT1dxQnRvRWxYOHhJeWJmZUY0T3o3QUhOajNxR1dmak1sZXZNQmNDZ1lFQStpSUYKM0REV3VIbnBCQXZvSUZCSEQyTzVBdEFTcXdIU2NNd0lwTXdvMWZWa0wyWjBkVDFMQW5zRFNaZkNTOXdBdlMrMQp4OUN1S0U3eWtwQTV4ajhpQVJNRHlHd0tuK29ldDZlendoWGczUkJXenFWUVFVdHVLcGdyVWx3bXpvYUJTbU53ClVjTEN6QzNCblArU05mZDh6dlp0OTU5VWYvMDJOak1ZeHFuQ25BOENnWUVBaXg1eDg1RDNoYWsvUCtqb2wvazQKRkZrcnRlTkhtOTUzc3NiVmd6NnA4Y214Wm1PRUJ2Qi9Lc1ZpcXlINC9BZnFNRjNoTlpVVEl4a2ZjMWQ2cnlHVAppQldNQ240dFg3d1ErOFBGUXNZOFJYNkJHN2F6dVZxdFpHR0lIQkdlY1dsbzN5c3U0WlMyWTJIdlR6Rk5OUnZpCktkckh4dFB3NnhJWXIwTlljSXBpbm5jQ2dZRUE5YnA4NVU4NWNpdVp4ZmJvaU80MGtTTFh1N0tyMUVISytqTUgKZnRadWU1dENXK3FjR0IwcDFuc0F4TWlKQVR0Vm9vWC9ZQmhiTDVBM2I5S3VYMXJnVGd2ZkdJTkRnTXhnZHU0UwpnMlk0N1JQREkrbDF5VitRRDlwRUhQb1l5YVdMMkllTjdWU1hTRHpmU3h3c0NFWmszM0Zxb094dTkvbkt5ejR4ClplR2FKUE1DZ1lBMDZaK1VYQ0tTZ0lleTlJa3o2dVhURjBJdVpvcFhrYVgrRDFEVHQyejI5Nk9nUFdscmhFdk4KWFNNTTFTWm5FRGtwWkYvWHVVaTNUaHExK3RSNTV1NXpZM0ZqcUdFYmRPQldiTktVU0pOeG1JV1p2Wnhud25CegpQeVpSQ0haMDFVazc4YUZVVXBRRHpYOWs5VzlYeUFCQ2Z3WTB1Z2dNenZ6YTYxNEZkZk9zUGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: zookeeper-operator/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: zookeeper-operator-manager-role
  labels:
    helm.sh/chart: zookeeper-operator-0.1.0
    app.kubernetes.io/name: zookeeper-operator
    app.kubernetes.io/instance: zookeeper-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - zookeeper.monime.sl
    resources:
      - zookeeperclusters
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - zookeeper.monime.sl
    resources:
      - zookeeperclusters/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - ""
      - apps
      - batch
      - policy
      - extensions
    resources:
      - jobs
      - pods
      - events
      - secrets
      - services
      - configmaps
      - statefulsets
      - poddisruptionbudgets
      - persistentvolumeclaims
    verbs:
      - '*'
---
# Source: zookeeper-operator/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: proxy-role
rules:
  - apiGroups: [ "authentication.k8s.io" ]
    resources:
      - tokenreviews
    verbs: [ "create" ]
  - apiGroups: [ "authorization.k8s.io" ]
    resources:
      - subjectaccessreviews
    verbs: [ "create" ]
---
# Source: zookeeper-operator/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: metrics-reader
rules:
  - nonResourceURLs: [ "/metrics" ]
    verbs: [ "get" ]
---
# Source: zookeeper-operator/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: zookeeper-operator-manager-role-binding
  labels:
    helm.sh/chart: zookeeper-operator-0.1.0
    app.kubernetes.io/name: zookeeper-operator
    app.kubernetes.io/instance: zookeeper-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: zookeeper-operator-manager-role
subjects:
  - kind: ServiceAccount
    name: default
    namespace: zookeeper-operator
---
# Source: zookeeper-operator/templates/role.yaml
# permissions to do leader election.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: zookeeper-operator-leader-election-role
  namespace: zookeeper-operator
  labels:
    helm.sh/chart: zookeeper-operator-0.1.0
    app.kubernetes.io/name: zookeeper-operator
    app.kubernetes.io/instance: zookeeper-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
# Source: zookeeper-operator/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: zookeeper-operator-leader-election-role-binding
  namespace: zookeeper-operator
  labels:
    helm.sh/chart: zookeeper-operator-0.1.0
    app.kubernetes.io/name: zookeeper-operator
    app.kubernetes.io/instance: zookeeper-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: zookeeper-operator-leader-election-role
subjects:
  - kind: ServiceAccount
    name: default
    namespace: zookeeper-operator
---
# Source: zookeeper-operator/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-operator-zookeeper-operator-webhook-service
  namespace: zookeeper-operator
  labels:
    helm.sh/chart: zookeeper-operator-0.1.0
    app.kubernetes.io/name: zookeeper-operator
    app.kubernetes.io/instance: zookeeper-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - port: 443
      targetPort: 9443
  selector:
    app.kubernetes.io/name: zookeeper-operator
    app.kubernetes.io/instance: zookeeper-operator
---
# Source: zookeeper-operator/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-operator-controller-manager-metrics-service
  namespace: zookeeper-operator
  labels:
    helm.sh/chart: zookeeper-operator-0.1.0
    app.kubernetes.io/name: zookeeper-operator
    app.kubernetes.io/instance: zookeeper-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - name: http
      port: 8080
      targetPort: http
  
  selector:
    app.kubernetes.io/name: zookeeper-operator
    app.kubernetes.io/instance: zookeeper-operator
---
# Source: zookeeper-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper-operator
  namespace: zookeeper-operator
  labels:
    helm.sh/chart: zookeeper-operator-0.1.0
    app.kubernetes.io/name: zookeeper-operator
    app.kubernetes.io/instance: zookeeper-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: zookeeper-operator
      app.kubernetes.io/instance: zookeeper-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: zookeeper-operator
        app.kubernetes.io/instance: zookeeper-operator
    spec:
      containers:
        - name: zookeeper-operator
          image: monime/zookeeper-operator:v0.1.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
          volumeMounts:
            - name: webhook-certs
              mountPath: /tmp/k8s-webhook-server/serving-certs
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 65534
            runAsUser: 65534
          env:
            - name: LEADER_ELECTION_NAMESPACE
              value: zookeeper-operator
      volumes:
        - name: webhook-certs
          secret:
            secretName: zookeeper-operator-zookeeper-operator-webhook-secret
      terminationGracePeriodSeconds: 20
---
# Source: zookeeper-operator/templates/webhookSecretAndConfigurations.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  creationTimestamp: null
  name: mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIVENDQWdXZ0F3SUJBZ0lRV0VxZi9FNnRST1VTRWZobFZKRzJpVEFOQmdrcWhraUc5dzBCQVFzRkFEQVoKTVJjd0ZRWURWUVFERXc1M1pXSnZiMnN0Y205dmRDMWpZVEFlRncweU1UQTNNakV3T0RReE16ZGFGdzB6TVRBMwpNVGt3T0RReE16ZGFNQmt4RnpBVkJnTlZCQU1URG5kbFltOXZheTF5YjI5MExXTmhNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE3dkpmZG9hSWlqVTdyc2I5QVRMc0tPaHdkQStQR0hsVFRiR1cKbkRyeTFlSmVXNUhJUW1FZmpaRXNXMElaNDBJaHRCYVhIRTJRMWF6d3QrV0RUT1pLNFdXeEN5QzNXZFlSZGJ3egoyalNlY3ZtWHRVdThHayszbjIvZmM3a2RuQ0UwNi9jWUFnWTFNc2ZSTUgzeFpmZDdGYzU5ZXB0Mzlqc1lLNUpYClNab2tXdkJuRGxUVHJGWFAxalZVZGhPWndUa25QMHNZMXMwSSt6R3RhV0xwUS9WY1RIWXByNzVVM1dJUElGNzYKc1lMUEZ6L2YzOHpvSzQ4QndyNU9RUkZ2SjBZVWRETnNBQ2llTEJzK0d4cGI5a1VUKzV6TDkyTW4xUHVZTk5aZgpIdDc2aStzTW00WGJsYlI3OS9uK1RqQTRLd2tFbW43b0tXSHJSd3VGTzlsUEVqYWwwUUlEQVFBQm8yRXdYekFPCkJnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEcKQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGTTNiR1IrQmJNdExkci9EemdMbHpJR3BlQW1hTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQzI4aW5TVXYwYUZHaDcrdHZ1b2l4Rnp5ZVpteVFDb1UrOVRyMHRTckNZClRyZnlzSVRLZXNSbkNiN0xnTlM1c2lrTHZ5azc0RzF5eW1DdCs0WnFyaG5iM2YwbGtPZWhvYU5icFNHNGRFRDAKdHVCMlZJWlVISTExU09zOWk2c3NSL1dGcHJvd0wxNW1rV0lCdzFZQ0RFMGZoOHU4cHFSRE44T2JRUlhNalFFMApkaEJwcjY1RENsdkd4QytONi9wOWRJbmdFUFo3cjdsUVM1VGdhQVpKMmNBNTFkdzRnQzR3QlFQNDdMaGpvUEkyCnZoNko3cGdlTmVabXNnN0RRUU5mYUl5Y2lwMU9NTXAyODExZVdDQ2lPMjd0TnRnNUxNa2NJV2gyQWM5QmVqZXcKQWE3d3lJTTVXRGo1UFYyTkdVSG1kdDIva1BDQVl3SXNGUGdkU1d0NVlXOGoKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: zookeeper-operator-zookeeper-operator-webhook-service
      namespace: zookeeper-operator
      path: /mutate-zookeeper-monime-sl-v1alpha1-zookeepercluster
  failurePolicy: Fail
  name: mzookeepercluster.kb.io
  rules:
  - apiGroups:
    - zookeeper.monime.sl
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - zookeeperclusters
  sideEffects: None
---
# Source: zookeeper-operator/templates/webhookSecretAndConfigurations.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  creationTimestamp: null
  name: validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIVENDQWdXZ0F3SUJBZ0lRV0VxZi9FNnRST1VTRWZobFZKRzJpVEFOQmdrcWhraUc5dzBCQVFzRkFEQVoKTVJjd0ZRWURWUVFERXc1M1pXSnZiMnN0Y205dmRDMWpZVEFlRncweU1UQTNNakV3T0RReE16ZGFGdzB6TVRBMwpNVGt3T0RReE16ZGFNQmt4RnpBVkJnTlZCQU1URG5kbFltOXZheTF5YjI5MExXTmhNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE3dkpmZG9hSWlqVTdyc2I5QVRMc0tPaHdkQStQR0hsVFRiR1cKbkRyeTFlSmVXNUhJUW1FZmpaRXNXMElaNDBJaHRCYVhIRTJRMWF6d3QrV0RUT1pLNFdXeEN5QzNXZFlSZGJ3egoyalNlY3ZtWHRVdThHayszbjIvZmM3a2RuQ0UwNi9jWUFnWTFNc2ZSTUgzeFpmZDdGYzU5ZXB0Mzlqc1lLNUpYClNab2tXdkJuRGxUVHJGWFAxalZVZGhPWndUa25QMHNZMXMwSSt6R3RhV0xwUS9WY1RIWXByNzVVM1dJUElGNzYKc1lMUEZ6L2YzOHpvSzQ4QndyNU9RUkZ2SjBZVWRETnNBQ2llTEJzK0d4cGI5a1VUKzV6TDkyTW4xUHVZTk5aZgpIdDc2aStzTW00WGJsYlI3OS9uK1RqQTRLd2tFbW43b0tXSHJSd3VGTzlsUEVqYWwwUUlEQVFBQm8yRXdYekFPCkJnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEcKQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGTTNiR1IrQmJNdExkci9EemdMbHpJR3BlQW1hTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQzI4aW5TVXYwYUZHaDcrdHZ1b2l4Rnp5ZVpteVFDb1UrOVRyMHRTckNZClRyZnlzSVRLZXNSbkNiN0xnTlM1c2lrTHZ5azc0RzF5eW1DdCs0WnFyaG5iM2YwbGtPZWhvYU5icFNHNGRFRDAKdHVCMlZJWlVISTExU09zOWk2c3NSL1dGcHJvd0wxNW1rV0lCdzFZQ0RFMGZoOHU4cHFSRE44T2JRUlhNalFFMApkaEJwcjY1RENsdkd4QytONi9wOWRJbmdFUFo3cjdsUVM1VGdhQVpKMmNBNTFkdzRnQzR3QlFQNDdMaGpvUEkyCnZoNko3cGdlTmVabXNnN0RRUU5mYUl5Y2lwMU9NTXAyODExZVdDQ2lPMjd0TnRnNUxNa2NJV2gyQWM5QmVqZXcKQWE3d3lJTTVXRGo1UFYyTkdVSG1kdDIva1BDQVl3SXNGUGdkU1d0NVlXOGoKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: zookeeper-operator-zookeeper-operator-webhook-service
      namespace: zookeeper-operator
      path: /validate-zookeeper-monime-sl-v1alpha1-zookeepercluster
  failurePolicy: Fail
  name: vzookeepercluster.kb.io
  rules:
  - apiGroups:
    - zookeeper.monime.sl
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - zookeeperclusters
  sideEffects: None
